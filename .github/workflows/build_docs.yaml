on: workflow_dispatch

name: Build docs

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      RSPM: "https://packagemanager.rstudio.com/cran/__linux__/focal/latest"
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - uses: actions/checkout@v2

      - uses: r-lib/actions/setup-r@v1
        with:
          r-version: 'release'

      - uses: r-lib/actions/setup-pandoc@v1


      - name: test push
        run: |
          cp DESCRIPTION DESCRIPTION_copy
          git config --local user.name "github-actions[bot]"
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add DESCRIPTION_copy
          git commit -m "Testing new workflow config"
          git push https://$USERNAME:$REPO_KEY@github.com/pharmpy/pharmr.git
        env:
          REPO_KEY: ${{secrets.ACCESS_TOKEN}}
          USERNAME: github-actions[bot]


      - name: Query dependencies
        run: |
          install.packages('remotes')
          saveRDS(remotes::dev_package_deps(dependencies = TRUE), ".github/depends.Rds", version = 2)
          writeLines(sprintf("R-%i.%i", getRversion()$major, getRversion()$minor), ".github/R-version")
        shell: Rscript {0}

      - name: Restore R package cache
        uses: actions/cache@v2
        with:
          path: ${{ env.R_LIBS_USER }}
          key: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1-${{ hashFiles('.github/depends.Rds') }}
          restore-keys: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1-

      - name: Install system dependencies
        run: |
          while read -r cmd
          do
            eval sudo $cmd
          done < <(Rscript -e 'writeLines(remotes::system_requirements("ubuntu", "20.04"))')

      - name: Install dependencies
        run: |
          remotes::install_deps(dependencies = TRUE)
          remotes::install_cran("rcmdcheck")
        shell: Rscript {0}

      - name: Install Python
        run: |
          Rscript -e "try(remotes::install_github('rstudio/reticulate'))"
          Rscript -e "try(reticulate::install_miniconda())"
          Rscript -e "try(reticulate::conda_create('r-reticulate'))"

      - name: Install Pharmr
        run: |
          Rscript -e "try(remotes::install_local())"
          Rscript -e "try(pharmr::install_pharmpy())"

      - name: Check (as cran)
        env:
          _R_CHECK_CRAN_INCOMING_REMOTE_: false
        run: |
          options(crayon.enabled = TRUE)
          rcmdcheck::rcmdcheck(args = c("--no-manual", "--as-cran"), error_on = "warning", check_dir = "check")
        shell: Rscript {0}

      - name: Upload check results
        if: failure()
        uses: actions/upload-artifact@main
        with:
          name: results-cran
          path: check

      - name: Install deploy dependencies
        run: |
          install.packages("here")
        shell: Rscript {0}

      - name: update-description
        run: |
          Rscript deploy/update_desciption.R minor
          git add DESCRIPTION
          git config --local user.name "github-actions[bot]"
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git commit -m "Update DESCRIPTION"
          git push https://$USERNAME:$REPO_KEY@github.com/pharmpy/pharmr.git
        env:
          REPO_KEY: ${{secrets.ACCESS_TOKEN}}
          USERNAME: github-actions[bot]

  # Add check of pharmr, build docs, commit, release
