on: workflow_dispatch

name: Build docs

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      RSPM: "https://packagemanager.rstudio.com/cran/__linux__/focal/latest"
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - name: Checkout pharmr
        uses: actions/checkout@v3
        with:
          path: pharmr_repo

      - uses: r-lib/actions/setup-r@v1
        with:
          r-version: 'release'

      - uses: r-lib/actions/setup-pandoc@v1

      - name: Query dependencies
        working-directory: pharmr_repo
        run: |
          install.packages('remotes')
          saveRDS(remotes::dev_package_deps(dependencies = TRUE), ".github/depends.Rds", version = 2)
          writeLines(sprintf("R-%i.%i", getRversion()$major, getRversion()$minor), ".github/R-version")
        shell: Rscript {0}

      - name: Restore R package cache
        uses: actions/cache@v2
        with:
          path: ${{ env.R_LIBS_USER }}
          key: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1-${{ hashFiles('.github/depends.Rds') }}
          restore-keys: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1-

      - name: Install system dependencies
        working-directory: pharmr_repo
        run: |
          while read -r cmd
          do
            eval sudo $cmd
          done < <(Rscript -e 'writeLines(remotes::system_requirements("ubuntu", "20.04"))')

      - name: Install dependencies
        working-directory: pharmr_repo
        run: |
          remotes::install_deps(dependencies = TRUE)
          remotes::install_cran("rcmdcheck")
          remotes::install_github('rstudio/reticulate')
          reticulate::install_miniconda()
        shell: Rscript {0}

      - name: Install pharmr
        working-directory: pharmr_repo
        run: |
          remotes::install_local(force=TRUE)
        shell: Rscript {0}

      - name: Install pharmpy
        working-directory: pharmr_repo
        run: |
          pharmr::install_pharmpy(envname='r-reticulate', method='auto', version='latest')
        shell: Rscript {0}

      - name: Install deploy dependencies
        run: |
          install.packages("here")
          install.packages("tidyverse")
          install.packages("devtools")
        shell: Rscript {0}
        
      - name: Update DESCRIPTION and documentation
        working-directory: pharmr_repo/deploy
        run: |
          Rscript update_description.R
          Rscript document_pharmpy.R

      - name: Check
        working-directory: pharmr_repo
        env:
          _R_CHECK_CRAN_INCOMING_REMOTE_: false
        run: |
          options(crayon.enabled = TRUE)
          rcmdcheck::rcmdcheck(args = c("--no-manual", "--as-cran"), error_on = "warning", check_dir = "check")
        shell: Rscript {0}

      - name: Upload check results
        if: failure()
        uses: actions/upload-artifact@main
        with:
          name: results-cran
          path: check

      - name: Add changes to DESCRIPTION and documentation
        working-directory: pharmr_repo
        run: |
          git config --local user.name "github-actions[bot]"
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add DESCRIPTION
          git add NAMESPACE
          git add R/functions_wrapper.R
          git add man/
          git status

      - name: Check if any files have been staged
        working-directory: pharmr_repo
        run: |
          if [[ "$(git diff --name-only --cached | wc -c)" != "0" ]]; then
            echo "has_been_updated=true" >> $GITHUB_ENV
          else
            echo "has_been_updated=false" >> $GITHUB_ENV
          fi

      - name: Commit changes
        if: ${{ env.has_been_updated == 'true' }}
        working-directory: pharmr_repo
        run: |
          echo "Committing changes"
          git config --local user.name "github-actions[bot]"
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git commit -m "Update DESCRIPTION/documentation"

      - name: Push changes
        working-directory: pharmr_repo
        run: |
          git config --local user.name "github-actions[bot]"
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git push https://$USERNAME:$REPO_KEY@github.com/pharmpy/pharmr.git
        env:
          REPO_KEY: ${{secrets.ACCESS_TOKEN}}
          USERNAME: github-actions[bot]

